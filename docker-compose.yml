# NOTE: This docker-compose.yml is meant to be just an example of how
# you could accomplish this on your own. It is not intended to work in
# all use-cases and must be adapted to fit your needs. This is merely
# a guideline.

# See docs.getsentry.com/on-premise/server/ for full
# instructions

version: '2'
services:
  base:
    restart: unless-stopped
    build: .
    environment:
      SENTRY_MEMCACHED_HOST: memcached
      SENTRY_REDIS_HOST: redis
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_EMAIL_HOST: ${SENTRY_EMAIL_HOST}
      SENTRY_EMAIL_PORT: ${SENTRY_EMAIL_PORT}
      SENTRY_EMAIL_USER: ${SENTRY_EMAIL_USER}
      SENTRY_EMAIL_PASSWORD: ${SENTRY_EMAIL_PASSWORD}
      SENTRY_EMAIL_USE_TLS: ${SENTRY_EMAIL_USE_TLS}
      SENTRY_ENABLE_EMAIL_REPLIES: ${SENTRY_ENABLE_EMAIL_REPLIES}
      SENTRY_SERVER_EMAIL: ${SENTRY_SERVER_EMAIL}
      SENTRY_SMTP_HOSTNAME: ${SENTRY_SMTP_HOSTNAME}
      SENTRY_SECRET_KEY: ${SENTRY_SECRET_KEY}
    volumes:
      - ./data/sentry:/var/lib/sentry/files

  smtp:
    restart: unless-stopped
    image: tianon/exim4

  memcached:
    restart: unless-stopped
    image: memcached:1.4

  redis:
    restart: unless-stopped
    image: redis:3.2-alpine

  postgres:
    restart: unless-stopped
    image: postgres:9.5
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  web:
    restart: unless-stopped
    extends: base
    links:
      - redis
      - postgres
      - memcached
      - smtp
    ports:
      - '${SENTRY_WEB_PORT}:9000'

  cron:
    restart: unless-stopped
    extends: base
    command: run cron
    links:
      - redis
      - postgres
      - memcached
      - smtp

  worker:
    restart: unless-stopped
    extends: base
    command: run worker
    links:
      - redis
      - postgres
      - memcached
      - smtp
